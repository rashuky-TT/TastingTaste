--------------------------------------------------------
--! File generated by asn2aadl v2.2-red331a4: DO NOT EDIT !
--------------------------------------------------------
--! MadeInFastMode:False:
--! InputASN1FileChecksum:aa6fdaf3e6199e789103e4ff2f25053c:dataview/dataview-uniq.asn:
--------------------------------------------------------

package DataView

public

DATA MyInteger
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "CPPEXAMPLE_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "MyInteger";
    TASTE::Position_In_File => [ line => 18 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END MyInteger;

DATA IMPLEMENTATION MyInteger.impl
END MyInteger.impl;

DATA MyInteger_Buffer_Max
END MyInteger_Buffer_Max;

DATA IMPLEMENTATION MyInteger_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type MyInteger
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END MyInteger_Buffer_Max.impl;

DATA MyInteger_Buffer
END MyInteger_Buffer;

DATA IMPLEMENTATION MyInteger_Buffer.impl
    -- Buffer to hold a marshalled data of type MyInteger
SUBCOMPONENTS
    Buffer : data MyInteger_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END MyInteger_Buffer.impl;

DATA PITCH_SEQ
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "PitchTM";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 24; suggested aligned message buffer is...
    Source_Data_Size => 24 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "PITCH-SEQ";
    TASTE::Position_In_File => [ line => 7 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END PITCH_SEQ;

DATA IMPLEMENTATION PITCH_SEQ.impl
END PITCH_SEQ.impl;

DATA PITCH_SEQ_Buffer_Max
END PITCH_SEQ_Buffer_Max;

DATA IMPLEMENTATION PITCH_SEQ_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type PITCH_SEQ
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (24); -- Size of the buffer
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END PITCH_SEQ_Buffer_Max.impl;

DATA PITCH_SEQ_Buffer
END PITCH_SEQ_Buffer;

DATA IMPLEMENTATION PITCH_SEQ_Buffer.impl
    -- Buffer to hold a marshalled data of type PITCH_SEQ
SUBCOMPONENTS
    Buffer : data PITCH_SEQ_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 40 Bytes; -- Size of the buffer in bytes
END PITCH_SEQ_Buffer.impl;

DATA PITCH_VALUE
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "PitchTM";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 13; suggested aligned message buffer is...
    Source_Data_Size => 16 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "PITCH-VALUE";
    TASTE::Position_In_File => [ line => 3 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aREAL;
END PITCH_VALUE;

DATA IMPLEMENTATION PITCH_VALUE.impl
END PITCH_VALUE.impl;

DATA PITCH_VALUE_Buffer_Max
END PITCH_VALUE_Buffer_Max;

DATA IMPLEMENTATION PITCH_VALUE_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type PITCH_VALUE
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Source_Data_Size => 16 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END PITCH_VALUE_Buffer_Max.impl;

DATA PITCH_VALUE_Buffer
END PITCH_VALUE_Buffer;

DATA IMPLEMENTATION PITCH_VALUE_Buffer.impl
    -- Buffer to hold a marshalled data of type PITCH_VALUE
SUBCOMPONENTS
    Buffer : data PITCH_VALUE_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 32 Bytes; -- Size of the buffer in bytes
END PITCH_VALUE_Buffer.impl;

DATA RESOLUTION
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "PitchTM";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "RESOLUTION";
    TASTE::Position_In_File => [ line => 4 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END RESOLUTION;

DATA IMPLEMENTATION RESOLUTION.impl
END RESOLUTION.impl;

DATA RESOLUTION_Buffer_Max
END RESOLUTION_Buffer_Max;

DATA IMPLEMENTATION RESOLUTION_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type RESOLUTION
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END RESOLUTION_Buffer_Max.impl;

DATA RESOLUTION_Buffer
END RESOLUTION_Buffer;

DATA IMPLEMENTATION RESOLUTION_Buffer.impl
    -- Buffer to hold a marshalled data of type RESOLUTION
SUBCOMPONENTS
    Buffer : data RESOLUTION_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END RESOLUTION_Buffer.impl;

DATA T_Boolean
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASTE_BasicTypes";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 1; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Boolean";
    TASTE::Position_In_File => [ line => 71 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aBOOLEAN;
END T_Boolean;

DATA IMPLEMENTATION T_Boolean.impl
END T_Boolean.impl;

DATA T_Boolean_Buffer_Max
END T_Boolean_Buffer_Max;

DATA IMPLEMENTATION T_Boolean_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Boolean
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_Boolean_Buffer_Max.impl;

DATA T_Boolean_Buffer
END T_Boolean_Buffer;

DATA IMPLEMENTATION T_Boolean_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Boolean
SUBCOMPONENTS
    Buffer : data T_Boolean_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END T_Boolean_Buffer.impl;

DATA T_Int32
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASTE_BasicTypes";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Int32";
    TASTE::Position_In_File => [ line => 63 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END T_Int32;

DATA IMPLEMENTATION T_Int32.impl
END T_Int32.impl;

DATA T_Int32_Buffer_Max
END T_Int32_Buffer_Max;

DATA IMPLEMENTATION T_Int32_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Int32
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_Int32_Buffer_Max.impl;

DATA T_Int32_Buffer
END T_Int32_Buffer;

DATA IMPLEMENTATION T_Int32_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Int32
SUBCOMPONENTS
    Buffer : data T_Int32_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END T_Int32_Buffer.impl;

DATA T_Int8
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASTE_BasicTypes";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Int8";
    TASTE::Position_In_File => [ line => 67 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END T_Int8;

DATA IMPLEMENTATION T_Int8.impl
END T_Int8.impl;

DATA T_Int8_Buffer_Max
END T_Int8_Buffer_Max;

DATA IMPLEMENTATION T_Int8_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Int8
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_Int8_Buffer_Max.impl;

DATA T_Int8_Buffer
END T_Int8_Buffer;

DATA IMPLEMENTATION T_Int8_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Int8
SUBCOMPONENTS
    Buffer : data T_Int8_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END T_Int8_Buffer.impl;

DATA T_Null_Record
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASTE_BasicTypes";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 0; suggested aligned message buffer is...
    Source_Data_Size => 0 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Null-Record";
    TASTE::Position_In_File => [ line => 73 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END T_Null_Record;

DATA IMPLEMENTATION T_Null_Record.impl
END T_Null_Record.impl;

DATA T_Null_Record_Buffer_Max
END T_Null_Record_Buffer_Max;

DATA IMPLEMENTATION T_Null_Record_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Null_Record
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (0); -- Size of the buffer
    Source_Data_Size => 0 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_Null_Record_Buffer_Max.impl;

DATA T_Null_Record_Buffer
END T_Null_Record_Buffer;

DATA IMPLEMENTATION T_Null_Record_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Null_Record
SUBCOMPONENTS
    Buffer : data T_Null_Record_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 16 Bytes; -- Size of the buffer in bytes
END T_Null_Record_Buffer.impl;

DATA T_UInt32
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASTE_BasicTypes";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-UInt32";
    TASTE::Position_In_File => [ line => 65 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END T_UInt32;

DATA IMPLEMENTATION T_UInt32.impl
END T_UInt32.impl;

DATA T_UInt32_Buffer_Max
END T_UInt32_Buffer_Max;

DATA IMPLEMENTATION T_UInt32_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_UInt32
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_UInt32_Buffer_Max.impl;

DATA T_UInt32_Buffer
END T_UInt32_Buffer;

DATA IMPLEMENTATION T_UInt32_Buffer.impl
    -- Buffer to hold a marshalled data of type T_UInt32
SUBCOMPONENTS
    Buffer : data T_UInt32_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END T_UInt32_Buffer.impl;

DATA T_UInt8
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASTE_BasicTypes";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-UInt8";
    TASTE::Position_In_File => [ line => 69 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END T_UInt8;

DATA IMPLEMENTATION T_UInt8.impl
END T_UInt8.impl;

DATA T_UInt8_Buffer_Max
END T_UInt8_Buffer_Max;

DATA IMPLEMENTATION T_UInt8_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_UInt8
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_UInt8_Buffer_Max.impl;

DATA T_UInt8_Buffer
END T_UInt8_Buffer;

DATA IMPLEMENTATION T_UInt8_Buffer.impl
    -- Buffer to hold a marshalled data of type T_UInt8
SUBCOMPONENTS
    Buffer : data T_UInt8_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END T_UInt8_Buffer.impl;

DATA VALIDITY
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "PitchTM";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "VALIDITY";
    TASTE::Position_In_File => [ line => 5 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aENUMERATED;
END VALIDITY;

DATA IMPLEMENTATION VALIDITY.impl
END VALIDITY.impl;

DATA VALIDITY_Buffer_Max
END VALIDITY_Buffer_Max;

DATA IMPLEMENTATION VALIDITY_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type VALIDITY
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END VALIDITY_Buffer_Max.impl;

DATA VALIDITY_Buffer
END VALIDITY_Buffer;

DATA IMPLEMENTATION VALIDITY_Buffer.impl
    -- Buffer to hold a marshalled data of type VALIDITY
SUBCOMPONENTS
    Buffer : data VALIDITY_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END VALIDITY_Buffer.impl;

SYSTEM Taste_DataView
END    Taste_DataView;

SYSTEM IMPLEMENTATION Taste_DataView.others
SUBCOMPONENTS
   MyInteger : DATA MyInteger.impl;
   PITCH_SEQ : DATA PITCH_SEQ.impl;
   PITCH_VALUE : DATA PITCH_VALUE.impl;
   RESOLUTION : DATA RESOLUTION.impl;
   T_Boolean : DATA T_Boolean.impl;
   T_Int32 : DATA T_Int32.impl;
   T_Int8 : DATA T_Int8.impl;
   T_Null_Record : DATA T_Null_Record.impl;
   T_UInt32 : DATA T_UInt32.impl;
   T_UInt8 : DATA T_UInt8.impl;
   VALIDITY : DATA VALIDITY.impl;
END Taste_DataView.others;
end DataView;
