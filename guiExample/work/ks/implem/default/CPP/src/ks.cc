// Body file for function KS
// Generated by TASTE on 2022-07-12 20:53:36
// You can edit this file, it will not be overwritten
// Provided interfaces : PitchControlLoop, SetTargetPitch
// Required interfaces : GetPitchValue
// User-defined properties for this function:
// Timers              : 

#include "ks.h"
#include "ks_state.h"
#include <iostream>

// Define and use function state inside this context structure
// avoid defining global/static variable elsewhere
ks_state ctxt_ks;

static asn1SccPITCH_SEQ pitch;
static asn1SccPITCH_VALUE targetPitchValue;

void ks_startup(void)
{
   // Write your initialisation code, but DO NOT CALL REQUIRED INTERFACES
    std::cout << "[KS] Startup" << std::endl;
}

void ks_PI_PitchControlLoop(void)
{
    if(pitch.pitchVal < targetPitchValue)
    {
        ++pitch.pitchVal;
    }else if(pitch.pitchVal > targetPitchValue)
    {
        --pitch.pitchVal;
    }

    ks_RI_GetPitchValue(&pitch);
}


void ks_PI_SetTargetPitch(const asn1SccPITCH_VALUE * targetPitch)
{
   targetPitchValue = *targetPitch;
}


