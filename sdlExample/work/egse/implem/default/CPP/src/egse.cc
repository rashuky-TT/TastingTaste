// Body file for function EGSE
// Generated by TASTE on 2022-07-12 20:53:36
// You can edit this file, it will not be overwritten
// Provided interfaces : CyclicTask, GetPitchValue
// Required interfaces : SetTargetPitch
// User-defined properties for this function:
// Timers              : 

#include "egse.h"
#include "egse_state.h"
#include <iostream>

// Define and use function state inside this context structure
// avoid defining global/static variable elsewhere
egse_state ctxt_egse;
asn1SccPITCH_VALUE targetPitchValue = 10;

void egse_startup(void)
{
   // Write your initialisation code, but DO NOT CALL REQUIRED INTERFACES
    std::cout << "[EGSE] Startup" << std::endl;
}



void egse_PI_GetPitchValue( const asn1SccPITCH_SEQ * value)
{
    std::cout << "Pitch value: " << value->pitchVal << " " << value->res << " " << value->vali << std::endl;
}

void egse_PI_CyclicTask()
{
   egse_RI_SetTargetPitch(&targetPitchValue);
   targetPitchValue += 10.0;
   if(targetPitchValue > 80.0)
       targetPitchValue = 0;
}
